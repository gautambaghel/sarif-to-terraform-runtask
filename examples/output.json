{
  "data": {
    "type": "task-results",
    "attributes": {
      "status": "failed",
      "message": "6 issues found",
      "url": "https://docs.snyk.io/products/snyk-infrastructure-as-code"
    },
    "relationships": {
      "outcomes": {
        "data": [
          {
            "type": "task-result-outcomes",
            "attributes": {
              "outcome-id": "SNYK-CC-TF-51",
              "description": "Low severity - Resource has public IP assigned",
              "tags": {
                "Severity": [
                  {
                    "label": "Medium",
                    "level": "warning"
                  }
                ]
              },
              "body": "**The issue is...** \nAWS resource could be accessed externally via public IP\n\n **The impact of this is...** \n Increases attack vector reachability\n\n **You can resolve this by...** \nSet `associate_public_ip_address` attribute to `false`",
              "url": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-51"
            }
          },
          {
            "type": "task-result-outcomes",
            "attributes": {
              "outcome-id": "SNYK-CC-TF-73",
              "description": "Low severity - AWS Security Group allows open egress",
              "tags": {
                "Severity": [
                  {
                    "label": "Medium",
                    "level": "warning"
                  }
                ]
              },
              "body": "**The issue is...** \nThe inline security group rule allows open egress\n\n **The impact of this is...** \n Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources\n\n **You can resolve this by...** \nSet `egress.cidr_blocks` attribute to specific ranges e.g. `192.168.1.0/24`",
              "url": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-73"
            }
          },
          {
            "type": "task-result-outcomes",
            "attributes": {
              "outcome-id": "SNYK-CC-AWS-426",
              "description": "Low severity - EC2 API termination protection is not enabled",
              "tags": {
                "Severity": [
                  {
                    "label": "Medium",
                    "level": "warning"
                  }
                ]
              },
              "body": "**The issue is...** \nTo prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance\n\n **The impact of this is...** \n Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type\n\n **You can resolve this by...** \nSet `disable_api_termination` attribute  with value `true`",
              "url": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-426"
            }
          },
          {
            "type": "task-result-outcomes",
            "attributes": {
              "outcome-id": "SNYK-CC-TF-53",
              "description": "Medium severity - Non-Encrypted root block device",
              "tags": {
                "Severity": [
                  {
                    "label": "Medium",
                    "level": "warning"
                  }
                ]
              },
              "body": "**The issue is...** \nThe root block device for ec2 instance is not encrypted\n\n **The impact of this is...** \n That should someone gain unauthorized access to the data they would be able to read the contents.\n\n **You can resolve this by...** \nSet `root_block_device.encrypted` attribute to `true`",
              "url": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-53"
            }
          },
          {
            "type": "task-result-outcomes",
            "attributes": {
              "outcome-id": "SNYK-CC-TF-130",
              "description": "Low severity - EC2 instance accepts IMDSv1",
              "tags": {
                "Severity": [
                  {
                    "label": "Medium",
                    "level": "warning"
                  }
                ]
              },
              "body": "**The issue is...** \nInstance Metadata Service v2 is not enforced\n\n **The impact of this is...** \n Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks\n\n **You can resolve this by...** \nSet `metadata_options.http_tokens` attribute to `required`",
              "url": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-130"
            }
          },
          {
            "type": "task-result-outcomes",
            "attributes": {
              "outcome-id": "SNYK-CC-TF-1",
              "description": "Medium severity - Security Group allows open ingress",
              "tags": {
                "Severity": [
                  {
                    "label": "Medium",
                    "level": "warning"
                  }
                ]
              },
              "body": "**The issue is...** \nThat inbound traffic is allowed to a resource from any source instead of a restricted range\n\n **The impact of this is...** \n That potentially everyone can access your resource\n\n **You can resolve this by...** \nSet `cidr_block` attribute with a more restrictive IP, for example `192.16.0.0/24`",
              "url": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-1"
            }
          }
        ]
      }
    }
  }
}