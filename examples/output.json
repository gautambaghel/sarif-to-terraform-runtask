{
  "data": {
    "type": "task-results",
    "attributes": {
      "status": "failed",
      "message": "7 issues found",
      "url": "https://checkov.io"
    },
    "relationships": {
      "outcomes": {
        "data": [
          {
            "type": "task-result-outcomes",
            "attributes": {
              "outcome-id": "CKV_AWS_24",
              "description": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22",
              "tags": {
                "Severity": [
                  {
                    "label": "Low",
                    "level": "info"
                  }
                ]
              },
              "body": "### Issue in main.tf file starting from **25** ending at **'51** \n\n```\nresource \"aws_security_group\" \"allow_ssh_from_anywhere\" {\n  name        = \"allow_ssh_from_anywhere\"\n  description = \"Allow SSH inbound traffic from anywhere\"\n\n  ingress {\n    description      = \"SSH from anywhere\"\n    from_port        = 22\n    to_port          = 22\n    protocol         = \"tcp\"\n    # WORKSHOP: Modify the following line to a CIDR block specific to you, and uncomment the next line with 0.0.0.0\n    # This line allows SSH access from any IP address\n#    cidr_blocks      = [\"0.0.0.0/0\"]\n    cidr_blocks      = [\"0.0.0.0/0\"]\n  }\n\n  egress {\n    from_port        = 0\n    to_port          = 0\n    protocol         = \"-1\"\n    cidr_blocks      = [\"0.0.0.0/0\"]\n    ipv6_cidr_blocks = [\"::/0\"]\n  }\n\n  tags = {\n    Name = \"allow_ssh_from_anywhere\"\n  }\n}\n\n```\n\n\n",
              "url": "https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/aws-policies/aws-networking-policies/networking-1-port-security.html"
            }
          },
          {
            "type": "task-result-outcomes",
            "attributes": {
              "outcome-id": "CKV_AWS_23",
              "description": "Ensure every security groups rule has a description\nResource: aws_security_group.allow_ssh_from_anywhere",
              "tags": {
                "Severity": [
                  {
                    "label": "Medium",
                    "level": "warning"
                  }
                ]
              },
              "body": "### Issue in main.tf file starting from **25** ending at **'51** \n\n```\nresource \"aws_security_group\" \"allow_ssh_from_anywhere\" {\n  name        = \"allow_ssh_from_anywhere\"\n  description = \"Allow SSH inbound traffic from anywhere\"\n\n  ingress {\n    description      = \"SSH from anywhere\"\n    from_port        = 22\n    to_port          = 22\n    protocol         = \"tcp\"\n    # WORKSHOP: Modify the following line to a CIDR block specific to you, and uncomment the next line with 0.0.0.0\n    # This line allows SSH access from any IP address\n#    cidr_blocks      = [\"0.0.0.0/0\"]\n    cidr_blocks      = [\"0.0.0.0/0\"]\n  }\n\n  egress {\n    from_port        = 0\n    to_port          = 0\n    protocol         = \"-1\"\n    cidr_blocks      = [\"0.0.0.0/0\"]\n    ipv6_cidr_blocks = [\"::/0\"]\n  }\n\n  tags = {\n    Name = \"allow_ssh_from_anywhere\"\n  }\n}\n\n```\n\n\n### Issue in main.tf file starting from **53** ending at **'79** \n\n```\nresource \"aws_security_group\" \"allow_port_80_from_anywhere\" {\n  name        = \"allow_port_80_from_anywhere\"\n  description = \"Allow port 80 inbound traffic from anywhere\"\n\n  ingress {\n    description      = \"HTTP from anywhere\"\n    from_port        = 80\n    to_port          = 80\n    protocol         = \"tcp\"\n    # WORKSHOP: Modify the following line to a CIDR block specific to you, and uncomment the next line with 0.0.0.0\n    # This line allows HTTP access from any IP address\n#    cidr_blocks      = [\"0.0.0.0/0\"]\n    cidr_blocks      = [\"0.0.0.0/0\"]\n  }\n\n  egress {\n    from_port        = 0\n    to_port          = 0\n    protocol         = \"-1\"\n    cidr_blocks      = [\"0.0.0.0/0\"]\n    ipv6_cidr_blocks = [\"::/0\"]\n  }\n\n  tags = {\n    Name = \"allow_port_80_from_anywhere\"\n  }\n}\n\n```\n\n\n",
              "url": "https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/aws-policies/aws-networking-policies/networking-31.html"
            }
          },
          {
            "type": "task-result-outcomes",
            "attributes": {
              "outcome-id": "CKV_AWS_260",
              "description": "No description for this issue",
              "tags": {
                "Severity": [
                  {
                    "label": "Info",
                    "level": "none"
                  }
                ]
              },
              "body": "### Issue in main.tf file starting from **53** ending at **'79** \n\n```\nresource \"aws_security_group\" \"allow_port_80_from_anywhere\" {\n  name        = \"allow_port_80_from_anywhere\"\n  description = \"Allow port 80 inbound traffic from anywhere\"\n\n  ingress {\n    description      = \"HTTP from anywhere\"\n    from_port        = 80\n    to_port          = 80\n    protocol         = \"tcp\"\n    # WORKSHOP: Modify the following line to a CIDR block specific to you, and uncomment the next line with 0.0.0.0\n    # This line allows HTTP access from any IP address\n#    cidr_blocks      = [\"0.0.0.0/0\"]\n    cidr_blocks      = [\"0.0.0.0/0\"]\n  }\n\n  egress {\n    from_port        = 0\n    to_port          = 0\n    protocol         = \"-1\"\n    cidr_blocks      = [\"0.0.0.0/0\"]\n    ipv6_cidr_blocks = [\"::/0\"]\n  }\n\n  tags = {\n    Name = \"allow_port_80_from_anywhere\"\n  }\n}\n\n```\n\n\n",
              "url": "https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-groups-do-not-allow-ingress-from-00000-to-port-80.html"
            }
          },
          {
            "type": "task-result-outcomes",
            "attributes": {
              "outcome-id": "CKV_AWS_79",
              "description": "Ensure Instance Metadata Service Version 1 is not enabled",
              "tags": {
                "Severity": [
                  {
                    "label": "High",
                    "level": "error"
                  }
                ]
              },
              "body": "### Issue in main.tf file starting from **92** ending at **'116** \n\n```\nresource \"aws_instance\" \"ec2\" {\n  ami           = data.aws_ami.amazon2.id\n  instance_type = \"t3.nano\"\n  associate_public_ip_address = true\n  vpc_security_group_ids = [ aws_security_group.allow_ssh_from_anywhere.id, aws_security_group.allow_port_80_from_anywhere.id]\n\n  user_data = <<-EOF\n    #!/bin/bash\n    # install httpd (Linux 2 version)\n    yum update -y\n    yum install -y httpd\n    systemctl start httpd\n    systemctl enable httpd\n    echo \"<h1>Hello World from the AWS HashiCorp + Snyk Workshop on $(hostname -f)</h1>\" > /var/www/html/index.html\n  EOF\n\n  # WORKSHOP: Add the name of your key here\n  key_name = \"mam-workshop-keypair\"\n\n  # WORKSHOP: uncomment the lines below to enable encrypted block device\n  root_block_device {\n    encrypted = true\n  }\n\n}\n```\n\n\n",
              "url": "https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/aws-policies/aws-general-policies/bc-aws-general-31.html"
            }
          },
          {
            "type": "task-result-outcomes",
            "attributes": {
              "outcome-id": "CKV_AWS_88",
              "description": "EC2 instance should not have public IP.",
              "tags": {
                "Severity": [
                  {
                    "label": "Info",
                    "level": "none"
                  }
                ]
              },
              "body": "### Issue in main.tf file starting from **92** ending at **'116** \n\n```\nresource \"aws_instance\" \"ec2\" {\n  ami           = data.aws_ami.amazon2.id\n  instance_type = \"t3.nano\"\n  associate_public_ip_address = true\n  vpc_security_group_ids = [ aws_security_group.allow_ssh_from_anywhere.id, aws_security_group.allow_port_80_from_anywhere.id]\n\n  user_data = <<-EOF\n    #!/bin/bash\n    # install httpd (Linux 2 version)\n    yum update -y\n    yum install -y httpd\n    systemctl start httpd\n    systemctl enable httpd\n    echo \"<h1>Hello World from the AWS HashiCorp + Snyk Workshop on $(hostname -f)</h1>\" > /var/www/html/index.html\n  EOF\n\n  # WORKSHOP: Add the name of your key here\n  key_name = \"mam-workshop-keypair\"\n\n  # WORKSHOP: uncomment the lines below to enable encrypted block device\n  root_block_device {\n    encrypted = true\n  }\n\n}\n```\n\n\n",
              "url": "https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/aws-policies/public-policies/public-12.html"
            }
          },
          {
            "type": "task-result-outcomes",
            "attributes": {
              "outcome-id": "CKV_AWS_126",
              "description": "Ensure that detailed monitoring is enabled for EC2 instances",
              "tags": {
                "Severity": [
                  {
                    "label": "High",
                    "level": "error"
                  }
                ]
              },
              "body": "### Issue in main.tf file starting from **92** ending at **'116** \n\n```\nresource \"aws_instance\" \"ec2\" {\n  ami           = data.aws_ami.amazon2.id\n  instance_type = \"t3.nano\"\n  associate_public_ip_address = true\n  vpc_security_group_ids = [ aws_security_group.allow_ssh_from_anywhere.id, aws_security_group.allow_port_80_from_anywhere.id]\n\n  user_data = <<-EOF\n    #!/bin/bash\n    # install httpd (Linux 2 version)\n    yum update -y\n    yum install -y httpd\n    systemctl start httpd\n    systemctl enable httpd\n    echo \"<h1>Hello World from the AWS HashiCorp + Snyk Workshop on $(hostname -f)</h1>\" > /var/www/html/index.html\n  EOF\n\n  # WORKSHOP: Add the name of your key here\n  key_name = \"mam-workshop-keypair\"\n\n  # WORKSHOP: uncomment the lines below to enable encrypted block device\n  root_block_device {\n    encrypted = true\n  }\n\n}\n```\n\n\n",
              "url": "https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/aws-policies/aws-logging-policies/ensure-that-detailed-monitoring-is-enabled-for-ec2-instances.html"
            }
          },
          {
            "type": "task-result-outcomes",
            "attributes": {
              "outcome-id": "CKV_AWS_135",
              "description": "Ensure that EC2 is EBS optimized",
              "tags": {
                "Severity": [
                  {
                    "label": "High",
                    "level": "error"
                  }
                ]
              },
              "body": "### Issue in main.tf file starting from **92** ending at **'116** \n\n```\nresource \"aws_instance\" \"ec2\" {\n  ami           = data.aws_ami.amazon2.id\n  instance_type = \"t3.nano\"\n  associate_public_ip_address = true\n  vpc_security_group_ids = [ aws_security_group.allow_ssh_from_anywhere.id, aws_security_group.allow_port_80_from_anywhere.id]\n\n  user_data = <<-EOF\n    #!/bin/bash\n    # install httpd (Linux 2 version)\n    yum update -y\n    yum install -y httpd\n    systemctl start httpd\n    systemctl enable httpd\n    echo \"<h1>Hello World from the AWS HashiCorp + Snyk Workshop on $(hostname -f)</h1>\" > /var/www/html/index.html\n  EOF\n\n  # WORKSHOP: Add the name of your key here\n  key_name = \"mam-workshop-keypair\"\n\n  # WORKSHOP: uncomment the lines below to enable encrypted block device\n  root_block_device {\n    encrypted = true\n  }\n\n}\n```\n\n\n",
              "url": "https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/aws-policies/aws-general-policies/ensure-that-ec2-is-ebs-optimized.html"
            }
          }
        ]
      }
    }
  }
}