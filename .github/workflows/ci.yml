name: Continuous Integration

on:
  pull_request:
  push:
    branches:
      - main
      - "releases/*"

jobs:
  test-javascript:
    name: JavaScript Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: npm

      - name: Install Dependencies
        id: npm-ci
        run: npm ci

      - name: Check Format
        id: npm-format-check
        run: npm run format:check

      - name: Lint
        id: npm-lint
        run: npm run lint

      - name: Test
        id: npm-ci-test
        run: npm run ci-test

  test-action:
    name: GitHub Actions Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      #  Test the GitHub Action - same definition as the action.yml file
      - run: docker run --net=host --name "terraform-scanner-runtask-action" --detach -e NGROK_AUTHTOKEN=${{ secrets.NGROK_TOKEN }} ngrok/ngrok:latest http --domain=${{ secrets.NGROK_DOMAIN }} 3000
        shell: bash
      - run: |
          env PORT=3000 env HMAC_KEY=${{ secrets.TFC_RUNTASK_HMAC }} node dist/index.js > terraform-scanner-runtask-action.log 2>&1 &   
        shell: bash
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          PRISMA_API_URL: ${{ secrets.PRISMA_API_URL }}
          PRISMA_CLOUD_TOKEN: ${{ secrets.PRISMA_CLOUD_TOKEN }}

      - uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.4
        id: run
        continue-on-error: true
        with:
          plan_only: true
          organization: 'tfc-integration-sandbox'
          workspace: 'vulnerable-ec2'
          token: ${{ secrets.TFC_API_TOKEN }}

      - run: cat terraform-scanner-runtask-action.log
        name: Scan results output

      - name: Print sarif results
        id: output
        run: cat results.sarif snyk.sarif 2>/dev/null
